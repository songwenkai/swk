C51 COMPILER V9.00   INTERRUPT                                                             07/02/2016 23:54:11 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE INTERRUPT
OBJECT MODULE PLACED IN .\obj\interrupt.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE src\interrupt.c LARGE BROWSE ORDER INCDIR(.\inc) DEBUG OBJECTEXTEND PRIN
                    -T(.\list\interrupt.lst) TABS(2) OBJECT(.\obj\interrupt.obj)

line level    source

   1          #include <stdio.h>
   2          #include "interrupt.h"
   3          #include "global_var.h"
   4          #include "stc12c5a60s2.h"
   5          #include "io_cfg.h"
   6          #include "key_scan.h"
   7          #include "nokia_5110.h"
   8          /**************************************************************************
   9           - 功能描述：51单片机的定时器0初始化
  10           - 隶属模块：STC51定时器
  11           - 函数属性：外部，使用户使用
  12           - 参数说明：无
  13           - 返回说明：无
  14           **************************************************************************/
  15          void time0_init(void) {
  16   1        TMOD |=0X01;        /* 16位定时/计数器  */
  17   1        TH0=(65535-duoji_pulse)>>8;   /* 重新赋值 高位  */
  18   1          TL0=(65535-duoji_pulse)&0xFF;   /* 重新赋值 低位  */
  19   1        TR0=0;            /* 关闭定时器开关 */
  20   1        ET0=0;            /* 关闭定时器中断 */
  21   1        return;
  22   1      }
  23          /**************************************************************************
  24           - 功能描述：51单片机的定时器1初始化
  25           - 隶属模块：STC51定时器
  26           - 函数属性：外部，使用户使用
  27           - 参数说明：无
  28           - 返回说明：无
  29           **************************************************************************/
  30          void time1_init(void) {
  31   1        TMOD |=0X10;        /* 16位定时/计数器  */
  32   1        TH1=(65535-20000)>>8;   /* 重新赋值 高位  */
  33   1          TL1=(65535-20000)&0xFF;   /* 重新赋值 低位  */
  34   1        TR1=0;            /* 关闭定时器开关 */
  35   1        ET1=0;            /* 关闭定时器中断 */
  36   1        return; 
  37   1      }
  38          
  39          /**************************************************************************
  40           - 功能描述：51单片机的外部中断0初始化
  41           - 隶属模块：STC51中断
  42           - 函数属性：外部，使用户使用
  43           - 参数说明：无
  44           - 返回说明：无
  45           **************************************************************************/
  46          void ext0_init(void) {
  47   1        IT0 = 1;                    /*下降沿触发*/
  48   1        EX0 = 0;          /*disable ext0*/
  49   1        return;
  50   1      }
  51          /**************************************************************************
  52           - 功能描述：51单片机的外部中断1初始化
  53           - 隶属模块：STC51中断
  54           - 函数属性：外部，使用户使用
C51 COMPILER V9.00   INTERRUPT                                                             07/02/2016 23:54:11 PAGE 2   

  55           - 参数说明：无
  56           - 返回说明：无
  57           **************************************************************************/
  58          void ext1_init(void) {
  59   1        IT1 = 1;                    /*下降沿触发*/
  60   1        EX1 = 0;          /*disable ext1*/
  61   1        return;
  62   1      }
  63          /**************************************************************************
  64           - 功能描述：51单片机的外部中断0子程序
  65           - 隶属模块：STC51中断
  66           - 函数属性：外部，使用户使用
  67           - 参数说明：无
  68           - 返回说明：无
  69           **************************************************************************/
  70          void ext0_interrupt() interrupt 0 
  71          {
  72   1        car_speed_left_count ++;
  73   1        return; 
  74   1      }
  75           /**************************************************************************
  76           - 功能描述：51单片机的定时器中断1子程序
  77           - 隶属模块：STC51中断
  78           - 函数属性：外部，使用户使用
  79           - 参数说明：无
  80           - 返回说明：无
  81           **************************************************************************/
  82          void ext1_interrupt() interrupt 2 
  83          {
  84   1        car_speed_right_count ++;
  85   1        return; 
  86   1      }
  87           /**************************************************************************
  88           - 功能描述：51单片机的定时器0中断子程序
  89           - 隶属模块：STC51中断
  90           - 函数属性：外部，使用户使用
  91           - 参数说明：无
  92           - 返回说明：无
  93           **************************************************************************/
  94          void timer0_interrupt() interrupt 1 //定时器0中断子程序
  95          {
  96   1        static unsigned char flag = 0;
  97   1        if(1 == flag){
  98   2          flag = 0;
  99   2          TH0=(65535-(20000-duoji_pulse))>>8;   /* 重新赋值 高位  */
 100   2            TL0=(65535-(20000-duoji_pulse))&0xFF; /* 重新赋值 低位  */
 101   2          led1 =~ led1;
 102   2        }else{
 103   2          flag = 1;
 104   2          TH0=(65535-duoji_pulse)>>8;     /* 重新赋值 高位  */
 105   2            TL0=(65535-duoji_pulse)&0xFF;   /* 重新赋值 低位  */  
 106   2        }
 107   1        return;
 108   1      }
 109          
 110          #if 0
               /**************************************************************************
               - 功能描述：51单片机的定时器1中断子程序
               - 隶属模块：STC51中断
               - 函数属性：外部，使用户使用
               - 参数说明：无
               - 返回说明：无
C51 COMPILER V9.00   INTERRUPT                                                             07/02/2016 23:54:11 PAGE 3   

               **************************************************************************/
              void timer1_interrupt() interrupt 3 //定时器1中断子程序
              {
                TH1=(65535-20000)>>8;   /* 重新赋值 高位  */
                TL1=(65535-20000)&0xFF;   /* 重新赋值 低位  */  
                
                //测速 每1S计算一次
                if(car_cesu_start==1) {
                  car_speed_time++ ; 
                  if(car_speed_time > 50) {         /* 计时20msx50=1S */
                    EX0 = 0;
                    EX1 = 0;
                    car_speed_left =  2*PI*CAR_WHEEL_RADIUS*(car_speed_left_count*1.00/CAR_CYCLE_PULSE);  //
                    car_speed_right = 2*PI*CAR_WHEEL_RADIUS*(car_speed_right_count*1.00/CAR_CYCLE_PULSE); //
                    car_speed_time = 0;
                    car_speed_left_count = 0;
                    car_speed_right_count = 0;
                    EX0 = 1;
                    EX1 = 1;
                  }
                }
                
                if(0 != (key_value = key_scan())) {
                  if(3 == key_value) {
                    //debug_5110 = ~debug_5110;
                    //led4 = debug_5110;
                  }
                }
                
              
                return;
              }
              #endif


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    302    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =      1    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
