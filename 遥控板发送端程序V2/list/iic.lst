C51 COMPILER V9.00   IIC                                                                   07/02/2016 23:54:12 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE IIC
OBJECT MODULE PLACED IN .\obj\iic.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE src\iic.c LARGE BROWSE ORDER INCDIR(.\inc) DEBUG OBJECTEXTEND PRINT(.\li
                    -st\iic.lst) TABS(2) OBJECT(.\obj\iic.obj)

line level    source

   1          #include <stc12c5a60s2.h>
   2          #include <intrins.h>
   3          #include "iic.h"
   4          #include "uart.h"
   5          #include"iic.h"
   6          #include"delay.h"
   7          #include"uart.h"
   8          
   9          
  10          /*******************************************************************
  11          起动总线函数               
  12          
  13          函数原型: void   Start_I2c();  
  14          功能:      启动I2C总线,即发送I2C起始条件.  
  15          ********************************************************************/
  16          void IIC_start()
  17          {
  18   1         IIC_dat=1;     /*发送起始条件的数据信号*/
  19   1         delay_us();
  20   1         IIC_clk=1;    /*起始条件建立时间大于4.7us,延时*/
  21   1         delay_us();
  22   1         delay_us();
  23   1         delay_us();
  24   1         delay_us();
  25   1         delay_us();      
  26   1          
  27   1         IIC_dat=0;     /*发送起始信号*/
  28   1         delay_us();    /* 起始条件锁定时间大于4μs*/
  29   1         delay_us();
  30   1         delay_us();
  31   1         delay_us();
  32   1         delay_us();      
  33   1              
  34   1         IIC_clk=0;     /*钳住I2C总线，准备发送或接收数据 */
  35   1         delay_us();
  36   1         delay_us();
  37   1      }
  38          
  39          /*******************************************************************
  40          结束总线函数               
  41          函数原型: void   Stop_I2c();  
  42          功能:      结束I2C总线,即发送I2C结束条件.  
  43          ********************************************************************/
  44          void IIC_stop()
  45          {
  46   1          IIC_dat=0;           /*发送结束条件的数据信号*/
  47   1          delay_us();     /*发送结束条件的时钟信号*/
  48   1          IIC_clk=1;           /*结束条件建立时间大于4us*/ 
  49   1         delay_us();
  50   1         delay_us();
  51   1         delay_us();
  52   1         delay_us();
  53   1         delay_us();
  54   1      
C51 COMPILER V9.00   IIC                                                                   07/02/2016 23:54:12 PAGE 2   

  55   1          IIC_dat=1;           /*发送I2C总线结束信号*/
  56   1            delay_us();
  57   1         delay_us();
  58   1         delay_us();
  59   1         delay_us();
  60   1      
  61   1          // jxy add : 2010-01-17
  62   1          // 在有些IIC模拟中，发现有用到下面2句
  63   1          //SCL=0;           /*结束条件建立时间大于4us*/ 
  64   1          //Delay1us(2);
  65   1      }
  66          
  67          /*******************************************************************
  68          字节数据发送函数
  69          函数原型: void   SendByte(uchar c);
  70          功能:      将数据c发送出去,可以是地址,也可以是数据,发完后等待应答,并对
  71                     此状态位进行操作.(不应答或非应答都使ack=0)     
  72                     发送数据正常，ack=1; ack=0表示被控器无应答或损坏。
  73          ********************************************************************/
  74          bit IIC_SendByte(u8 c)
  75          {
  76   1      u8 xdata BitCnt=0,i=0;
  77   1      bit ack;
  78   1      
  79   1          for(BitCnt=0;BitCnt<8;BitCnt++)   /*要传送的数据长度为8位*/
  80   1           {
  81   2            if((c<<BitCnt)&0x80)IIC_dat=1;    /*判断发送位*/
  82   2              else   IIC_dat=0;                
  83   2            delay_us();
  84   2            IIC_clk=1;                /*置时钟线为高，通知被控器开始接收数据位*/
  85   2            
  86   2            delay_us();              /*保证时钟高电平周期大于4μs*/
  87   2            delay_us();
  88   2          delay_us();
  89   2          delay_us();
  90   2          delay_us();
  91   2                 
  92   2            IIC_clk=0; 
  93   2      
  94   2           }
  95   1          
  96   1           delay_us();
  97   1         delay_us();
  98   1           IIC_dat=1;                 /*8位发送完后释放数据线，准备接收应答位*/
  99   1           delay_us();
 100   1         delay_us();   
 101   1           IIC_clk=1;
 102   1           delay_us();
 103   1         delay_us();
 104   1           while((IIC_dat==1)&&(i<250))i++;
 105   1         if(i>=248)ack=0;
 106   1         else ack=1;         /*判断是否接收到应答信号*/
 107   1         i=0;  
 108   1           IIC_clk=0;
 109   1           delay_us();
 110   1         delay_us();
 111   1         return ack;
 112   1      }
 113          
 114          /*******************************************************************
 115                            字节数据接收函数               
 116          函数原型: uchar   RcvByte();
C51 COMPILER V9.00   IIC                                                                   07/02/2016 23:54:12 PAGE 3   

 117          功能:      用来接收从器件传来的数据,并判断总线错误(不发应答信号)，
 118                     发完后请用应答函数应答从机。  
 119          ********************************************************************/ 
 120          u8 IIC_readByte()
 121          {
 122   1         u8 retc;
 123   1         u8 xdata BitCnt=0;
 124   1        
 125   1         retc=0; 
 126   1         IIC_dat=1;                /*置数据线为输入方式*/
 127   1         for(BitCnt=0;BitCnt<8;BitCnt++)
 128   1             {
 129   2               delay_us();   
 130   2               IIC_clk=0;                   /*置时钟线为低，准备接收数据位*/
 131   2              
 132   2               delay_us();                  /*时钟低电平周期大于4.7μs*/
 133   2           delay_us();
 134   2           delay_us();
 135   2           delay_us();
 136   2           delay_us();
 137   2             
 138   2               IIC_clk=1;                   /*置时钟线为高使数据线上数据有效*/
 139   2               delay_us();
 140   2           delay_us();
 141   2           delay_us();
 142   2               retc=retc<<1;
 143   2               if(IIC_dat==1)retc=retc+1;   /*读数据位,接收的数据位放入retc中 */
 144   2               delay_us();
 145   2           delay_us(); 
 146   2             }
 147   1          IIC_clk=0;    
 148   1           delay_us();
 149   1        delay_us();
 150   1         return(retc);
 151   1      }
 152          
 153          /********************************************************************
 154          应答子函数
 155          函数原型:   void Ack_I2c(bit a);
 156          功能:       主控器进行应答信号(可以是应答或非应答信号，由位参数a决定)
 157                  0为应答。
 158          ********************************************************************/
 159          void IIC_Ack(bit a)
 160          {
 161   1        
 162   1         if(a==0)IIC_dat=0;            /*在此发出应答或非应答信号 */
 163   1               else IIC_dat=1;
 164   1         delay_us();
 165   1         delay_us();
 166   1         delay_us();      
 167   1         IIC_clk=1;
 168   1        
 169   1         delay_us();                     /*时钟低电平周期大于4μs*/
 170   1         delay_us();
 171   1         delay_us();
 172   1         delay_us();
 173   1         delay_us();
 174   1          
 175   1         IIC_clk=0;                      /*清时钟线，钳住I2C总线以便继续接收*/
 176   1         delay_us();
 177   1         delay_us();   
 178   1      }
C51 COMPILER V9.00   IIC                                                                   07/02/2016 23:54:12 PAGE 4   

 179          
 180          
 181          /*******************************************************************
 182          向有子地址器件发送多字节数据函数
 183          函数原型: bit   ISendStr(uchar sla,uchar suba,ucahr *s,uchar no);  
 184          功能:      从启动总线到发送地址，子地址,数据，结束总线的全过程,从器件
 185                     地址sla，子地址suba，发送内容是s指向的内容，发送no个字节。
 186                     如果返回1表示操作成功，否则操作有误。
 187          注意：     使用前必须已结束总线。
 188          输入: 器件地址，器件子地址，数据，数据个数
 189          ********************************************************************/
 190          unsigned char IIC_WriteData(unsigned char byAD, unsigned char byRA,
 191                               unsigned char * pData, unsigned char byCount)
 192          {
 193   1          u8 xdata i=0;
 194   1        bit ack=1;   
 195   1          IIC_start();                  /*启动总线*/
 196   1          ack=IIC_SendByte(byAD);              /*发送器件地址*/
 197   1          if(ack==0)
 198   1          { 
 199   2            UART1_SendString("木有应答！");
 200   2              return(0);
 201   2          }
 202   1          ack=IIC_SendByte(byRA);             /*发送器件子地址*/
 203   1          if(ack==0)
 204   1          { 
 205   2              return(0);
 206   2           }
 207   1      
 208   1          for(i = 0; i < byCount; i++)
 209   1          {   
 210   2            ack=IIC_SendByte(*pData);             /*发送数据*/
 211   2            if(ack==0)
 212   2            {  
 213   3                return(0);  
 214   3             }
 215   2            pData++;
 216   2          } 
 217   1          IIC_stop();                 /*结束总线*/ 
 218   1      
 219   1          return(1);
 220   1      }
 221          
 222          /*******************************************************************
 223          向有子地址器件读取多字节数据函数               
 224          函数原型: bit   ISendStr(uchar sla,uchar suba,ucahr *s,uchar no);  
 225          功能:      从启动总线到发送地址，子地址,读数据，结束总线的全过程,从器件
 226                     地址sla，子地址suba，读出的内容放入s指向的存储区，读no个字节。
 227                      如果返回1表示操作成功，否则操作有误。
 228          注意：     使用前必须已结束总线。
 229          输入: 器件地址，器件子地址，数据，数据个数
 230          ********************************************************************/
 231          unsigned char IIC_ReadData(unsigned char byAD, unsigned char * pData, 
 232                                          unsigned char byCount)
 233          {
 234   1          u8 xdata i;
 235   1        bit ack;
 236   1      
 237   1         IIC_start();                  /*启动总线*/
 238   1      
 239   1          ack=IIC_SendByte(byAD);                 /*发送器件地址*/
 240   1          
C51 COMPILER V9.00   IIC                                                                   07/02/2016 23:54:12 PAGE 5   

 241   1      
 242   1          if(ack==0)
 243   1          {
 244   2              return(0);
 245   2          }
 246   1      
 247   1          for(i = 0; i < (byCount-1); i++)
 248   1          {
 249   2              *pData=IIC_readByte();                /*接收数据*/
 250   2              IIC_Ack(0);                      /*发送应答位*/  
 251   2              pData++;
 252   2          }
 253   1      
 254   1          *pData=IIC_readByte();
 255   1          IIC_Ack(1);                    /*发送非应答*/
 256   1          IIC_stop();                    /*结束总线*/ 
 257   1          return(1);
 258   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    617    ----
   CONSTANT SIZE    =     11    ----
   XDATA SIZE       =   ----      18
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----       4
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
